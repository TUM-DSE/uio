# vim: set ft=make et :

APP := "build/nginx_kvm-x86_64"

default:
    @just --choose

run:
    sudo qemu-system-x86_64 \
        -cpu host \
        -enable-kvm \
        -m 1024 \
        -chardev socket,path=/tmp/port0,server=on,wait=off,id=char0 \
        -device virtio-serial \
        -device virtconsole,chardev=char0,id=ushell,nr=0 \
        -fsdev local,id=myid,path=$(pwd)/fs0,security_model=none \
        -device virtio-9p-pci,fsdev=myid,mount_tag=fs0,disable-modern=on,disable-legacy=off \
        -netdev bridge,id=en0,br=virbr0 \
        -device virtio-net-pci,netdev=en0 \
        -append "netdev.ipv4_addr=172.44.0.2 netdev.ipv4_gw_addr=172.44.0.1 netdev.ipv4_subnet_mask=255.255.255.0 -- -c /nginx/conf/nginx.conf" \
        -initrd build/fs0.cpio \
        -kernel {{APP}} \
        -nographic
#-initrd /scratch/okelmann/eurosys21-artifacts/support/data-unikraft-eurosys21/nginx.cpio \

debug:
    sudo qemu-system-x86_64 \
        -gdb tcp::5678 \
        -cpu host \
        -enable-kvm \
        -m 500M \
        -chardev socket,path=/tmp/port0,server=on,wait=off,id=char0 \
        -device virtio-serial \
        -device virtconsole,chardev=char0,id=ushell,nr=0 \
        -fsdev local,id=myid,path=$(pwd)/fs0,security_model=none \
        -device virtio-9p-pci,fsdev=myid,mount_tag=fs0,disable-modern=on,disable-legacy=off \
        -netdev bridge,id=en0,br=virbr0 \
        -device virtio-net-pci,netdev=en0 \
        -append "netdev.ipv4_addr=172.44.0.2 netdev.ipv4_gw_addr=172.44.0.1 netdev.ipv4_subnet_mask=255.255.255.0 -- -c /nginx/conf/nginx.conf" \
        -kernel {{APP}} -nographic

gdb:
     gdb --eval-command="target remote :5678" \
         {{APP}}.dbg

setup_bridge:
    #!/usr/bin/env bash
    ip a s virbr0 >/dev/null 2>&1
    if [ $? ]; then
        sudo brctl addbr virbr0
        sudo ip a a 172.44.0.1/24 dev virbr0
        sudo ip l set dev virbr0 up
    fi

benchmark host_port NGINX_BENCH_LENGTH="1m" NGINX_CONNS="30" NGINX_WRK_THRDS="14":
  # - With just native-nginx:
  #   ~77000 req/s
  # - Serving index.html from nix store we get ~110000 req/s (this is the same as the equivalent unikraft eurosys eval achieves on our machines). (-38% perf compared to uk eurosys eval)
  # - With just run (no open_file_cache):
  #   ushell: 1670 req/s
  #   vanilla: 2170 req/s
  # - With just run (open_file_cache):
  #   18700 req/s
  #   with lib-nginx 0.5.0 19000 req/s
  #   with region allocator: 7700 req/s
  #   with new converged .config: 19000 req/s
  #   with initrd/root-initramfs: 163k-180k req/s
  #   with CONFIG_LWIP_UKNETDEV_POLLONLY: 210k req/s
  # - With just qemu-nixos-nginx:
  #   57700 req/s
  # - Nginx kernel from unikraft eurosys eval:
  #   (https://github.com/pogobanane/eurosys21-artifacts/blob/master/experiments/fig_13_nginx-perf/nginxkraftvm.sh)
  #   235000 req/s (-21% from unikraft eurosys eval, but our cpu is -18% single core perf)
  taskset -c 6,7 wrk -t {{NGINX_WRK_THRDS}} \
    -d{{NGINX_BENCH_LENGTH}} -c {{NGINX_CONNS}} \
    http://{{host_port}}/index.html

native-nginx:
  mkdir -p nginx-native/logs
  ln -s fs0/nginx/html nginx-native/html
  taskset -c 5 nginx -c ../nginx.conf -e $(pwd)/nginx-native/nginx.error -p $(pwd)/nginx-native

qemu-nixos-nginx:
  nix build -o nginx-native/image-ro .#nginx-image
  install -D -m 644 nginx-native/image-ro/nixos.qcow2 nginx-native/nginx.qcow2
  sudo qemu-system-x86_64 \
      -cpu host \
      -enable-kvm \
      -m 1024 \
      -device virtio-serial \
      -drive file=./nginx-native/nginx.qcow2 \
      -netdev bridge,id=en0,br=virbr0 \
      -device virtio-net-pci,netdev=en0 \
      -nographic

attach:
    sudo socat /tmp/port0 -
