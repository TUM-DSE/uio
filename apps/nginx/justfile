# vim: set ft=make et :

APP := "build/nginx_kvm-x86_64"

default:
    @just --choose

run:
    sudo qemu-system-x86_64 \
        -cpu host \
        -enable-kvm \
        -m 500M \
        -chardev socket,path=/tmp/port0,server=on,wait=off,id=char0 \
        -device virtio-serial \
        -device virtconsole,chardev=char0,id=ushell,nr=0 \
        -fsdev local,id=myid,path=$(pwd)/fs0,security_model=none \
        -device virtio-9p-pci,fsdev=myid,mount_tag=fs0,disable-modern=on,disable-legacy=off \
        -netdev bridge,id=en0,br=virbr0 \
        -device virtio-net-pci,netdev=en0 \
        -append "netdev.ipv4_addr=172.44.0.2 netdev.ipv4_gw_addr=172.44.0.1 netdev.ipv4_subnet_mask=255.255.255.0 -- -c /nginx/conf/nginx.conf" \
        -kernel {{APP}} -nographic

debug:
    sudo qemu-system-x86_64 \
        -gdb tcp::5678 \
        -cpu host \
        -enable-kvm \
        -m 500M \
        -chardev socket,path=/tmp/port0,server=on,wait=off,id=char0 \
        -device virtio-serial \
        -device virtconsole,chardev=char0,id=ushell,nr=0 \
        -fsdev local,id=myid,path=$(pwd)/fs0,security_model=none \
        -device virtio-9p-pci,fsdev=myid,mount_tag=fs0,disable-modern=on,disable-legacy=off \
        -netdev bridge,id=en0,br=virbr0 \
        -device virtio-net-pci,netdev=en0 \
        -append "netdev.ipv4_addr=172.44.0.2 netdev.ipv4_gw_addr=172.44.0.1 netdev.ipv4_subnet_mask=255.255.255.0 -- -c /nginx/conf/nginx.conf" \
        -kernel {{APP}} -nographic

gdb:
     gdb --eval-command="target remote :5678" \
         {{APP}}.dbg

setup_bridge:
    #!/usr/bin/env bash
    ip a s virbr0 >/dev/null 2>&1
    if [ $? ]; then
        sudo brctl addbr virbr0
        sudo ip a a 172.44.0.1/24 dev virbr0
        sudo ip l set dev virbr0 up
    fi

attach:
    sudo socat /tmp/port0 -
